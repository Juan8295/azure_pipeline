# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: vm-azure

steps:

#- task: Bash@3
  #displayName: execute-JMeter-test
  #inputs:
    #targetType: filePath
    #filePath: home/juan/apache-jmeter-5.4.1/bin/jmeter.sh

- task: ApacheJMeterLoadTest@1
  displayName: execute
  inputs:
    loadTest: HTTP-Request.jmx

- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: vm-azure 
    mavenServiceConnections: $(personal access token)

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'verify'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: Path
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    mavenPath: /usr/share/maven

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'install'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: Path
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    mavenPath: /usr/share/maven

#- task: Maven@3
  #inputs:
    #mavenPomFile: 'pom.xml'
    #goals: 'clean deploy'
    #publishJUnitResults: true
    #testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #javaHomeOption: 'JDKVersion'
    #mavenVersionOption: Path
    #mavenAuthenticateFeed: false
    #effectivePomSkip: false
    #sonarQubeRunAnalysis: false
    #mavenPath: /usr/share/maven